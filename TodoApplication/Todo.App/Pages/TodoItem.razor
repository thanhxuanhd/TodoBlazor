<div class="bg-white rounded-md p-2 mb-1 h-32 shadow-sm" id="todo-@Model.TodoId">
    <div class="h-2/3">
        <span id="@Model.TodoId">
            @Model.Title
        </span>
    </div>
    <div class="rounded-md p-2 mb-2 h-1/3 text-right">
        <div class="inline w-full flex justify-end">
            @if (Model.IsCompleted)
            {
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-500 focus:outline-none mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />
                </svg>
            }
            <button class="text-blue-500 focus:outline-none mr-1" title="Edit" @onclick="@((e)=> HandleEditClick(e, Model.TodoId))">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                </svg>
            </button>

            <button class="text-red-500 focus:outline-none" title="Delete" @onclick="@((e)=> HandleDeleteClick(e, Model))">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                </svg>
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public TodoViewModel Model { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEditClicked { get; set; }

    [Parameter]
    public EventCallback<TodoViewModel> OnDeleteClicked { get; set; }

    public async Task HandleEditClick(MouseEventArgs eventArgs, Guid todoId)
    {
        await OnEditClicked.InvokeAsync(todoId);
    }

    public async Task HandleDeleteClick(MouseEventArgs eventArgs, TodoViewModel todo)
    {
        await OnDeleteClicked.InvokeAsync(todo);
    }
}
